-- static
DROP TABLE IF EXISTS public."WordType" CASCADE;
CREATE TABLE public."WordType" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 CYCLE),
    "name" VARCHAR(50) NOT NULL,
    "description" TEXT NOT NULL,
    "example" TEXT NOT NULL,
	PRIMARY KEY ("id")
);

INSERT INTO public."WordType" ("name", "description", "example") VALUES
('Nouns', 'Nouns are used to name people, places, things, and abstract ideas.', 'Mann (man), Frau (woman), Haus (house), Liebe (love)'),
('Pronouns', 'Pronouns are used to replace nouns to avoid repetition.', 'ich (I), du (you), er (he), sie (she), es (it)'),
('Verbs', 'Verbs express actions, occurrences, or states of being.', 'laufen (to run), essen (to eat), sein (to be), haben (to have)'),
('Adjectives', 'Adjectives describe or modify nouns.', 'schön (beautiful), schnell (fast), klein (small), groß (big)'),
('Adverbs', 'Adverbs modify verbs, adjectives, or other adverbs.', 'schnell (quickly), heute (today), dort (there), sehr (very)'),
('Articles', 'Articles define the noun as specific or unspecific.', 'der (the - masculine), die (the - feminine), das (the - neuter), ein (a - masculine/neuter), eine (a - feminine)'),
('Prepositions', 'Prepositions show relationships between nouns and other words.', 'in (in), auf (on), unter (under), mit (with)'),
('Conjunctions', 'Conjunctions connect words, phrases, or clauses.', 'und (and), oder (or), aber (but), weil (because)'),
('Interjections', 'Interjections express strong emotion or sudden bursts of feeling.', 'ach (oh), au! (ouch!), hallo (hello)'),
('Particles', 'Particles modify sentences in subtle ways, adding emphasis or clarity.', 'doch (yet, but), mal (once, just), ja (yes, indeed)'),
('Numerals', 'Numerals express numbers and quantities.', 'eins (one), zwei (two), drei (three)'),
('Modal Particles', 'Modal particles add nuance to a sentence, indicating the speakers attitude.', 'doch (really), eben (just), halt (simply)');

-- static
DROP TABLE IF EXISTS public."Gender" CASCADE;
CREATE TABLE public."Gender" (
    "short_name" VARCHAR NOT NULL,
    "name" VARCHAR(50) NOT NULL,
    "article" TEXT NOT NULL,
	PRIMARY KEY ("short_name")
);

INSERT INTO public."Gender" ("short_name", "name", "article") VALUES
('M','Musculine','der'),
('F','Feminine','die'),
('N','Neutral','das');

-- dynamic 
DROP TABLE IF EXISTS public."GenderWords" CASCADE;
CREATE TABLE public."GenderWords" (
	"id" INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 CYCLE),
	"musculine" varchar NULL,
	"feminine" varchar NULL,
	"neutral" varchar NULL,
	PRIMARY KEY ("id")
);

-- dynamic 
DROP TABLE IF EXISTS public."Conjugation" CASCADE;
CREATE TABLE public."Conjugation" (
	"id" INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 CYCLE),
	"1_singular" varchar NULL,
	"2_singular" varchar NULL,
	"3_singular" varchar NULL,
	"1_plural" varchar NULL,
	"2_plural" varchar NULL,
	"3_plural" varchar NULL,
	"infinite" varchar NULL,
	PRIMARY KEY ("id")
);

-- dynamic
DROP TABLE IF EXISTS public."Lexicon" CASCADE;
CREATE TABLE public."Lexicon" (
	"id" INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 CYCLE),
	"word" varchar NULL,
	"translation" varchar NULL,
	"word_type" INTEGER,
	"gender" varchar NULL,
    "first_letter" varchar NULL,
    "description" varchar NULL,
	"context_example" varchar NULL,
	PRIMARY KEY ("id"),
	CONSTRAINT word_type_fkey FOREIGN KEY ("word_type") REFERENCES public."WordType"("id"),
	CONSTRAINT gender_fkey FOREIGN KEY ("gender") REFERENCES public."Gender"("short_name")
);

-- dynamic 
-- many to many
DROP TABLE IF EXISTS public."GenderWordsLexicon" CASCADE;
CREATE TABLE public."GenderWordsLexicon" (
	"id_lexicon" INTEGER,
	"id_gender_words" INTEGER,
	PRIMARY KEY ("id_lexicon","id_gender_words"),
	CONSTRAINT id_lexicon_fkey FOREIGN KEY ("id_lexicon") REFERENCES public."Lexicon"("id"),
	CONSTRAINT id_gender_words_fkey FOREIGN KEY ("id_gender_words") REFERENCES public."GenderWords"("id")
);

-- dynamic 
-- many to many
DROP TABLE IF EXISTS public."ConjugationLexicon" CASCADE;
CREATE TABLE public."ConjugationLexicon" (
	"id_lexicon" INTEGER,
	"id_conjugation" INTEGER,
	PRIMARY KEY ("id_lexicon","id_conjugation"),
	CONSTRAINT id_lexicon2_fkey FOREIGN KEY ("id_lexicon") REFERENCES public."Lexicon"("id"),
	CONSTRAINT id_conjugation_fkey FOREIGN KEY ("id_conjugation") REFERENCES public."Conjugation"("id")
);